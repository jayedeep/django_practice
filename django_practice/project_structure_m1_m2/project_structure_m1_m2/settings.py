"""
Django settings for project_structure_m1_m2 project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
STATIC_DIR = os.path.join(BASE_DIR,'static')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-d96i4vjvzqn$=mdfw9h1kg+=th(%xt^wxt)k+l&&4olxlueqrc'

# DEBUG determines if your application is in development mode (True) or production mode (False).
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS is a list of host/domain names that your application can serve. Used for security.
ALLOWED_HOSTS = []


# Application definition
# Application definition: Lists the apps that are part of your project.

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main_point_1', # Add your app names here
    'main_point_2', # Add your app names here
    'main_point_10' # used for integration of bootstrap base.html
]

# Middleware classes that process requests and responses globally.

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# URL routing configuration

ROOT_URLCONF = 'project_structure_m1_m2.urls'

# Template settings

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,  # checks templates within your apps
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media'  # added
            ],
        },
    },
]

WSGI_APPLICATION = 'project_structure_m1_m2.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
# Database configuration: Defines database connection settings.

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

#
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',  # Database engine
#         'NAME': BASE_DIR / 'db.sqlite3',        # Database name or file path
#         'USER': '',                             # Database username (if applicable)
#         'PASSWORD': '',                         # Database password (if applicable)
#         'HOST': '',                             # Database host (if applicable)
#         'PORT': '',                             # Database port (if applicable)
#     }
# }


# DATABASES = {
#     'default': {
#         # ... default database configuration ...
#     },
#     'legacy_db': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'legacy_database',
#         'USER': 'legacy_user',
#         'PASSWORD': 'legacy_password',
#         'HOST': 'legacy_host',
#         'PORT': 'legacy_port',
#     },
# }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/
# Internationalization and localization settings

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
# Static files (CSS, JavaScript, images) configuration

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    STATIC_DIR
]
# Media files (user-uploaded content) configuration
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
